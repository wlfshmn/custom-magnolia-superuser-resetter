<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>se.geardo.magnolia</groupId>
    <artifactId>geardo-magnolia-module-superuser-resetter</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Magnolia superuser resetter</name>
    <description>This module restores the superuser account to its default enabled state and default password on
        startup, if necessary. It is intended to recover local instances.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Not all plugins support the '8' syntax but all should support the legacy.
        PMD is known to suffer from this limitation. -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <magnoliaBundleVersion>5.5.6</magnoliaBundleVersion>

        <junit.version>5.3.2</junit.version>
        <mockito.version>2.23.4</mockito.version>
        <equalsverifier.version>3.1.4</equalsverifier.version>
        <checkstyle.version>8.18</checkstyle.version>
        <pmd.version>6.10.0</pmd.version>

        <!-- Plugin versions, maven-origin -->
        <plugin.antrun.version>1.8</plugin.antrun.version>
        <plugin.assembly.version>3.1.1</plugin.assembly.version>
        <plugin.checkstyle.version>3.0.0</plugin.checkstyle.version>
        <plugin.clean.version>3.1.0</plugin.clean.version>
        <plugin.compiler.version>3.8.0</plugin.compiler.version>
        <plugin.dependency.version>3.1.1</plugin.dependency.version>
        <plugin.deploy.version>2.8.2</plugin.deploy.version>
        <!-- the maven superpom uses -M2 now, so make an exception and use unreleased version -->
        <plugin.enforcer.version>3.0.0-M2</plugin.enforcer.version>
        <plugin.failsafe.version>2.16</plugin.failsafe.version>
        <plugin.install.version>2.5.2</plugin.install.version>
        <plugin.jar.version>3.1.1</plugin.jar.version>
        <!-- The current version of the PMD plugin does not support the '8' syntax for the
        source level. Review this limitation on upgrade. -->
        <plugin.pmd.version>3.11.0</plugin.pmd.version>
        <plugin.resources.version>3.1.0</plugin.resources.version>
        <plugin.site.version>3.7.1</plugin.site.version>
        <plugin.source.version>3.0.1</plugin.source.version>
        <!-- Surefire 2.22 or more recent required to support Junit5 natively -->
        <plugin.surefire.version>2.22.1</plugin.surefire.version>
        <plugin.war.version>3.2.2</plugin.war.version>

        <!-- Plugin versions, third-party-origin -->
        <plugin.fmt.version>2.7</plugin.fmt.version>
        <plugin.spotbugs.version>3.1.10</plugin.spotbugs.version>
        <plugin.versions.version>2.7</plugin.versions.version>
        <plugin.jacoco.version>0.8.2</plugin.jacoco.version>

    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Importing dependencyManagement of magnolia bundle. -->
            <dependency>
                <groupId>info.magnolia.bundle</groupId>
                <artifactId>magnolia-community-webapp</artifactId>
                <version>${magnoliaBundleVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- JUnit now has a BOM, so use it -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>info.magnolia</groupId>
            <artifactId>magnolia-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- This is required to keep my work IDEA happy, but shouldn't need to be included by the project, surely .-->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>${equalsverifier.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>META-INF/magnolia/**/*</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>META-INF/magnolia/**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <!-- Maven core plugins required for build, or required to get mvn versions:display-plugin-updates to stop complaining -->
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${plugin.antrun.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${plugin.assembly.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${plugin.checkstyle.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${plugin.clean.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.compiler.version}</version>
                </plugin>
                <!-- Allows up to date invocation like 'mvn dependency:tree' on this project.-->
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${plugin.dependency.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${plugin.deploy.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${plugin.enforcer.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${plugin.failsafe.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${plugin.install.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${plugin.jar.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${plugin.pmd.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-core</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-java</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-javascript</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>net.sourceforge.pmd</groupId>
                            <artifactId>pmd-jsp</artifactId>
                            <version>${pmd.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugin.resources.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${plugin.site.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${plugin.source.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${plugin.surefire.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${plugin.war.version}</version>
                </plugin>
                <!-- Non-core maven plugins -->
                <!-- Allows up to date invocation like 'mvn com.coveo:fmt-maven-plugin:format on this project.-->
                <plugin>
                    <groupId>com.coveo</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>${plugin.fmt.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${plugin.spotbugs.version}</version>
                </plugin>
                <!-- Allows up to date invocation like 'mvn versions:display-plugin-updates' on this project.-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${plugin.versions.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${plugin.jacoco.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <!-- TODO: Temporary, Unit tests are needed for this code. -->
                            <failIfNoTests>false</failIfNoTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>1.8.0</version>
                                </requireJavaVersion>
                                <banDuplicatePomDependencyVersions/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- codestyle enforced by google-java-format -->
            <plugin>
                <groupId>com.coveo</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <displayFiles>true</displayFiles>
                            <verbose>true</verbose>
                            <skipSortingImports>false</skipSortingImports>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Enforce rules, in addition to google-java-format.
            Make sure they don't conflict. If they do, google-java-format will win and the build will break. -->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <configLocation>google_checks.xml</configLocation>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- static code quality analysis, and duplication checking -->
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-reports</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cpd-check</goal>
                        </goals>
                        <configuration>
                            <printFailingErrors>true</printFailingErrors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- static code quality analysis -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <xmlOutput>true</xmlOutput>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- regular code coverage-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <haltOnFailure>true</haltOnFailure>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>85%</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>MISSEDCOUNT</value>
                                            <maximum>0</maximum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <excludes>
                                <!-- TODO: Temporary, Unit tests are needed for this code. -->
                                <exclude>**/*.class</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <!-- This stops PMD/CPD from complaining about source Xrefs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
        </plugins>
    </reporting>

</project>
